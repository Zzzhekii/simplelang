#declare_and_skip &Multiply_ab
&tmp_a &a
&tmp_b &b
ADD &tmp_b -1
&tmp_jmp %HERE%
ADD &tmp_b -1
ADD &tmp_a &a
JMP &tmp_b &tmp_jmp
DEL &tmp_jmp
DEL &tmp_b
RET &tmp_a
#end_of_declaration

// Multiply &a by &b and write the result to a &c
// Then delete &Multiply_ab (for clear output)
// And print &c

&first_number 0
&second_number 0

// Get the 1 number
#input_to_buffer &size
RBUF
&jmp_tmp %HERE%

&a 0
BUF &a &size
ADD &a -48
ADD &first_number &a
&a &first_number
&b 10
CALL &Multiply_ab
&c 0
POP &c
&first_number &c

ADD &size -1
JMP &size &jmp_tmp

// Get the 1 number
#input_to_buffer &size
RBUF
&jmp_tmp %HERE%

&a 0
BUF &a &size
ADD &a -48
ADD &second_number &a
&a &second_number
&b 10
CALL &Multiply_ab
&c 0
POP &c
&second_number &c

ADD &size -1
JMP &size &jmp_tmp

#print_declarated_variables

ADD &a -48
ADD &b -48

CALL &Multiply_ab
&c 0
POP &c

ADD &c 48
PRT &c
